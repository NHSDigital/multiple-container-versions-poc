worker_processes 1;

events { worker_connections 1024; }

http {


    sendfile on;

    upstream my_service_v1 {
        server my_service_v1:80;
    }
    upstream my_service_v2 {
        server my_service_v2:80;
    }

    # map to different upstream backends based on header
    map $http_x_apim_version $pool {
         v1 "my_service_v1:80";
         v2 "my_service_v2:80";
    }

    server {
        #  this is the docker network resolver
        resolver 127.0.0.11 ipv6=off;

        listen 80;
        server_name localhost;

        location = /health {
            access_log off;
            add_header 'Content-Type' 'application/json';
            return 200 '{"status":"UP"}';
        }

        location / {
            proxy_pass http://$pool;

            #standard proxy settings
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            proxy_connect_timeout 600;
            proxy_send_timeout 600;
            proxy_read_timeout 600;
            send_timeout 600;
        }
    }
}